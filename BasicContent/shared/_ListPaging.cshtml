@inherits Custom.Hybrid.Razor12
@{
    var pagingInfo = AsList(Data["Paging"]).FirstOrDefault();
    int currentPage = (int)pagingInfo.PageNumber;
    int pageCount = (int)pagingInfo.PageCount;
    
    if (pageCount <= 1) {  return; }
    
    var enablePrev = currentPage > 1;
    var enableNext = currentPage < pageCount;
}

<nav aria-label="Paging navigation">
    <ul class="pagination mb-0">
        <li class="page-item @(enablePrev ? "" : "disabled")">
            <a class="page-link" href="@LinkToPage(currentPage - 1, enablePrev)" aria-label="Previous">
                <i class="fas fa-caret-left fa-lg" aria-hidden="true"></i>
                <span class="sr-only">Previous</span>
            </a>
        </li>
        @for(var page = 1; page <= pagingInfo.PageCount; page++) {
            <li class="page-item @(page == currentPage ? "active" : "")">
                <a class="page-link" href="@LinkToPage(page)">@page</a>
            </li>
        }
        <li class="page-item @(enableNext ? "" : "disabled")">
            <a class="page-link" href="@LinkToPage(currentPage + 1, enableNext)" aria-label="Next">
                <i class="fas fa-caret-right fa-lg" aria-hidden="true"></i>
                <span class="sr-only">Next</span>
            </a>
        </li>
    </ul>
</nav>

@functions {
  public dynamic LinkToPage(int pageNumber, bool enabled = true) {
    if (!enabled) {
      return Link.To();
    }

    var newParams = pageNumber <= 1
      ? CmsContext.Page.Parameters.Remove("page")
      : CmsContext.Page.Parameters.Set("page", pageNumber.ToString());
    return Link.To(parameters: newParams); 
  }
}